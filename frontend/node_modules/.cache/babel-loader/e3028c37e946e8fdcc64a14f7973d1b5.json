{"ast":null,"code":"var _jsxFileName = \"/home/dvd/Desktop/Pro35/frontend/src/components/form/Categoria1.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '../../assets/css/Style.css';\nimport { orange } from '@material-ui/core/colors';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5'\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)'\n    }\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"'\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3'\n    }\n  }\n});\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n  return React.createElement(Radio, Object.assign({\n    className: classes.root,\n    disableRipple: true,\n    color: \"default\",\n    checkedIcon: React.createElement(\"span\", {\n      className: clsx(classes.icon, classes.checkedIcon),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }),\n    icon: React.createElement(\"span\", {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    // Tell Material-UI what the font-size on the html element is.\n    htmlFontSize: 16\n  }\n});\n\nclass Categoria1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      idDominio: [],\n      idPregunta: [],\n      nombreCategoria: \"\",\n      nombreDominio: \"\",\n      categorias: [],\n      dominios: [],\n      dimensiones: [],\n      preguntas: [],\n      answer: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  fetchCategorias() {\n    fetch('http://localhost:3000/api/categoria/listar/5e27327a91f09e071c85810d/').then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState({\n        categorias: data\n      }); //console.log(this.state.categorias+ \" Categorias\");\n\n      console.log(data);\n    });\n  }\n\n  getSelectStyles(name, personName, theme) {\n    return {\n      fontWeight: personName.indexOf(name) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n    };\n  }\n\n  fetchDominios() {\n    fetch('/api/dominio/listar3').then(res => res.json()).then(data => {\n      console.log(data + \"Dominios\");\n      this.setState({\n        dominios: data\n      });\n      console.log(this.state.dominios + \"Dominios\");\n    });\n  }\n\n  componentDidMount() {\n    console.log('componente fue montado');\n    this.fetchCategorias();\n    this.fetchDominios();\n  }\n\n  handleChange(event, categoria, dominio, dimension, pregunta) {\n    console.log(event.target.name);\n    debugger;\n    const answer = event.target.value;\n    alert(answer);\n    let respuestasLS = JSON.parse(localStorage.getItem('respuestas')) || [];\n    respuestasLS.push({\n      categoria,\n      dominio,\n      dimension,\n      pregunta\n    });\n    localStorage.setItem('respuestas', respuestasLS);\n    console.log(event.target.name);\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    this.setState({\n      [name]: value\n    }); //cambiar el estado de una app de react\n  }\n\n  render() {\n    //const {children} = this.props;\n    const message = \"Hola\";\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-encuesta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"dn-id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Categorias\")), this.state.categorias.map(categoria => {\n      localStorage.setItem('categoria ' + categoria._id, JSON.stringify(categoria._id));\n      return React.createElement(\"div\", {\n        key: categoria._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"section-categoria\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, categoria.nombreCategoria), \" \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), categoria.idDominio.map(dominio => {\n        localStorage.setItem('dominio ' + dominio._id, JSON.stringify(dominio._id));\n        return React.createElement(\"div\", {\n          key: dominio._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"section-dominio\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \" \", React.createElement(\"div\", {\n          className: \"dn-id\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \" Dominio \", dominio._id, \" \"), \" \", React.createElement(Typography, {\n          variant: \"h6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, dominio.nombreDominio, \" \")), dominio.idDimension.map(dimension => {\n          localStorage.setItem('dimension ' + dimension._id, JSON.stringify(dimension._id));\n          return React.createElement(\"div\", {\n            key: dimension._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"section-dimension\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \" \", React.createElement(\"div\", {\n            className: \"dn-id\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \"Dimension  \", dimension._id), \" \", React.createElement(Typography, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, dimension.nombreDimension)), dimension.idPreguntas.map(pregunta => {\n            return React.createElement(\"div\", {\n              className: \"section-preguntas\",\n              key: pregunta._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 201\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"dn-id\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, \"Pregunta \", pregunta._id, \" \"), React.createElement(Typography, {\n              variant: \"h6\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 202\n              },\n              __self: this\n            }, \" \", pregunta.nombrePregunta, \": \"), React.createElement(FormLabel, {\n              component: \"legend\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 203\n              },\n              __self: this\n            }, \"Respuestas\"), React.createElement(RadioGroup, {\n              defaultValue: localStorage.getItem(this.handleChange.answer) ? localStorage.getItem(this.handleChange.answer) : 'any',\n              onChange: event => this.handleChange(event, categoria, dominio, dimension, pregunta),\n              \"aria-label\": pregunta._id,\n              name: \"customized-radios\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205\n              },\n              __self: this\n            }, pregunta.idRespuestas.map(respuesta => {\n              localStorage.setItem(respuesta._id + '/' + pregunta._id + '/' + respuesta.valorRespuesta, JSON.stringify(respuesta._id));\n              return React.createElement(\"div\", {\n                key: respuesta._id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 214\n                },\n                __self: this\n              }, React.createElement(FormControlLabel, {\n                value: respuesta._id + '/' + respuesta.valorRespuesta,\n                control: React.createElement(StyledRadio, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 215\n                  },\n                  __self: this\n                }),\n                label: respuesta.nombreRespuesta,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 215\n                },\n                __self: this\n              }));\n            })));\n          }));\n        }));\n      }));\n    })));\n  }\n\n}\n\nexport default Categoria1;","map":{"version":3,"sources":["/home/dvd/Desktop/Pro35/frontend/src/components/form/Categoria1.js"],"names":["React","Component","render","clsx","createMuiTheme","makeStyles","ThemeProvider","Radio","RadioGroup","FormControlLabel","FormControl","FormLabel","orange","Typography","useStyles","root","backgroundColor","icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checkedIcon","display","content","StyledRadio","props","classes","theme","typography","htmlFontSize","Categoria1","constructor","state","idDominio","idPregunta","nombreCategoria","nombreDominio","categorias","dominios","dimensiones","preguntas","answer","handleChange","bind","fetchCategorias","fetch","then","res","json","data","console","log","setState","getSelectStyles","name","personName","fontWeight","indexOf","fontWeightRegular","fontWeightMedium","fetchDominios","componentDidMount","event","categoria","dominio","dimension","pregunta","target","value","alert","respuestasLS","JSON","parse","localStorage","getItem","push","setItem","message","map","_id","stringify","idDimension","nombreDimension","idPreguntas","nombrePregunta","idRespuestas","respuesta","valorRespuesta","nombreRespuesta"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport clsx from 'clsx';\nimport { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport '../../assets/css/Style.css';\nimport { orange } from '@material-ui/core/colors';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n  icon: {\n    borderRadius: '50%',\n    width: 16,\n    height: 16,\n    boxShadow: 'inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)',\n    backgroundColor: '#f5f8fa',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))',\n    '$root.Mui-focusVisible &': {\n      outline: '2px auto rgba(19,124,189,.6)',\n      outlineOffset: 2,\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#ebf1f5',\n    },\n    'input:disabled ~ &': {\n      boxShadow: 'none',\n      background: 'rgba(206,217,224,.5)',\n    },\n  },\n  checkedIcon: {\n    backgroundColor: '#137cbd',\n    backgroundImage: 'linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))',\n    '&:before': {\n      display: 'block',\n      width: 16,\n      height: 16,\n      backgroundImage: 'radial-gradient(#fff,#fff 28%,transparent 32%)',\n      content: '\"\"',\n    },\n    'input:hover ~ &': {\n      backgroundColor: '#106ba3',\n    },\n  },\n});\n\nfunction StyledRadio(props) {\n  const classes = useStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={clsx(classes.icon, classes.checkedIcon)} />}\n      icon={<span className={classes.icon} />}\n      {...props}\n    />\n  );\n}\n\nconst theme = createMuiTheme({\n  typography: {\n    // Tell Material-UI what the font-size on the html element is.\n    htmlFontSize: 16,\n  },\n});\n\nclass Categoria1 extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      idDominio: [],\n      idPregunta: [],\n      nombreCategoria: \"\",\n      nombreDominio: \"\",\n      categorias: [],\n      dominios: [],\n      dimensiones: [],\n      preguntas: [],\n      answer: \"\",\n\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n\n  fetchCategorias() {\n    fetch('http://localhost:3000/api/categoria/listar/5e27327a91f09e071c85810d/')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState({ categorias: data });\n        //console.log(this.state.categorias+ \" Categorias\");\n        console.log(data)\n      });\n  }\n\n  getSelectStyles(name, personName, theme) {\n    return {\n      fontWeight:\n        personName.indexOf(name) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n\n  fetchDominios() {\n    fetch('/api/dominio/listar3')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data + \"Dominios\");\n        this.setState({ dominios: data });\n        console.log(this.state.dominios + \"Dominios\");\n      })\n\n  }\n\n\n\n  componentDidMount() {\n    console.log('componente fue montado');\n    this.fetchCategorias();\n    this.fetchDominios();\n  }\n\n\n\n  handleChange(event, categoria, dominio, dimension, pregunta) {\n    console.log(event.target.name);\n    debugger;\n    const answer = event.target.value;\n\n    alert(answer);\n    \n    let respuestasLS = JSON.parse(localStorage.getItem('respuestas')) || [];\n\n    respuestasLS.push({\n      categoria,\n      dominio,\n      dimension,\n      pregunta\n    })\n    localStorage.setItem('respuestas', respuestasLS)\n  console.log(event.target.name);\n   const { name, value } = event.target;\n   this.setState({\n      [name]: value\n    }); //cambiar el estado de una app de react\n\n  \n  }\n\n\n\n  render() {\n\n    //const {children} = this.props;\n    const message = \"Hola\";\n    return (\n      <ThemeProvider theme={theme}>\n        <div className=\"div-encuesta\">\n          <h1 className='dn-id'><Typography>Categorias</Typography></h1>\n          {\n            this.state.categorias.map(categoria => {\n              localStorage.setItem('categoria ' + categoria._id, JSON.stringify(categoria._id))\n              return (\n\n                <div key={categoria._id}>\n                  <section className=\"section-categoria\"><Typography variant=\"h6\">{categoria.nombreCategoria}</Typography> </section>\n                  {/*JSON.stringify(categoria.idDominio.map(dominios => dominios.nombreDominio).join(\"/\")).replace(/['\"]+/g, '')*/} <br></br>\n\n                  {categoria.idDominio.map(dominio => {\n                    localStorage.setItem('dominio ' + dominio._id, JSON.stringify(dominio._id))\n\n                    return (\n                      <div key={dominio._id}>\n                        <div className=\"section-dominio\"> <div className='dn-id'> Dominio {dominio._id} </div> <Typography variant=\"h6\">{dominio.nombreDominio} </Typography></div>\n                        {\n                          dominio.idDimension.map(dimension => {\n                            localStorage.setItem('dimension ' + dimension._id, JSON.stringify(dimension._id))\n\n                            return (\n                              <div key={dimension._id}>\n                                <div className=\"section-dimension\"> <div className=\"dn-id\">Dimension  {dimension._id}</div> <Typography>{dimension.nombreDimension}</Typography></div>\n                                {\n                                  dimension.idPreguntas.map(pregunta => {\n                                    return (\n                                      <div className=\"section-preguntas\" key={pregunta._id}>\n                                        <div className=\"dn-id\">Pregunta {pregunta._id} </div><Typography variant=\"h6\"> {pregunta.nombrePregunta}: </Typography>\n                                        <FormLabel component=\"legend\">Respuestas</FormLabel>\n\n                                        <RadioGroup\n                                          defaultValue={localStorage.getItem(this.handleChange.answer) ? localStorage.getItem(this.handleChange.answer) : 'any'}\n                                          onChange={(event) => this.handleChange(event, categoria, dominio, dimension, pregunta)} aria-label={pregunta._id} name=\"customized-radios\">\n                                          {\n\n                                            pregunta.idRespuestas.map(respuesta => {\n\n                                              localStorage.setItem(respuesta._id + '/' + pregunta._id + '/' + respuesta.valorRespuesta, JSON.stringify(respuesta._id))\n                                              return (\n                                                <div key={respuesta._id}>\n                                                  <FormControlLabel value={respuesta._id + '/' + respuesta.valorRespuesta} control={<StyledRadio />} label={respuesta.nombreRespuesta} />\n\n                                                </div>\n                                              )\n                                            })\n                                          }\n                                        </RadioGroup>\n                                      </div>\n\n                                    )\n                                  })\n                                }\n                              </div>\n\n                            )\n                          })\n                        }\n                      </div>\n                    )\n                  })}\n\n                  { /*JSON.stringify(categoria.idPreguntas)*/}\n\n                </div>\n              )\n            })\n\n          }\n        </div>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default Categoria1;"]},"metadata":{},"sourceType":"module"}